/*Copyright (c) 2018-2019 rubaya.io All Rights Reserved.
 This software is the confidential and proprietary information of rubaya.io You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with rubaya.io*/
package com.vcalumni.vcadb_users;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/

import java.io.Serializable;
import java.sql.Date;
import java.sql.Time;
import java.util.Objects;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.ForeignKey;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

import org.hibernate.annotations.Fetch;
import org.hibernate.annotations.FetchMode;

/**
 * Events generated by WaveMaker Studio.
 */
@Entity
@Table(name = "`events`")
public class Events implements Serializable {

    private String eventname;
    private String eventdetails;
    private Date eventdate;
    private Time eventtime;
    private Integer maxtickets;
    private Boolean allowguests;
    private Short maxguests;
    private Date deadlinedate;
    private Integer fees;
    private String venuename;
    private String eventtype;
    private Venues venues;

    @Id
    @Column(name = "`eventname`", nullable = false, length = 60)
    public String getEventname() {
        return this.eventname;
    }

    public void setEventname(String eventname) {
        this.eventname = eventname;
    }

    @Column(name = "`eventdetails`", nullable = false, length = 255)
    public String getEventdetails() {
        return this.eventdetails;
    }

    public void setEventdetails(String eventdetails) {
        this.eventdetails = eventdetails;
    }

    @Column(name = "`eventdate`", nullable = false)
    public Date getEventdate() {
        return this.eventdate;
    }

    public void setEventdate(Date eventdate) {
        this.eventdate = eventdate;
    }

    @Column(name = "`eventtime`", nullable = false)
    public Time getEventtime() {
        return this.eventtime;
    }

    public void setEventtime(Time eventtime) {
        this.eventtime = eventtime;
    }

    @Column(name = "`maxtickets`", nullable = true, scale = 0, precision = 10)
    public Integer getMaxtickets() {
        return this.maxtickets;
    }

    public void setMaxtickets(Integer maxtickets) {
        this.maxtickets = maxtickets;
    }

    @Column(name = "`allowguests`", nullable = true)
    public Boolean getAllowguests() {
        return this.allowguests;
    }

    public void setAllowguests(Boolean allowguests) {
        this.allowguests = allowguests;
    }

    @Column(name = "`maxguests`", nullable = true, scale = 0, precision = 3)
    public Short getMaxguests() {
        return this.maxguests;
    }

    public void setMaxguests(Short maxguests) {
        this.maxguests = maxguests;
    }

    @Column(name = "`deadlinedate`", nullable = true)
    public Date getDeadlinedate() {
        return this.deadlinedate;
    }

    public void setDeadlinedate(Date deadlinedate) {
        this.deadlinedate = deadlinedate;
    }

    @Column(name = "`fees`", nullable = true, scale = 0, precision = 10)
    public Integer getFees() {
        return this.fees;
    }

    public void setFees(Integer fees) {
        this.fees = fees;
    }

    @Column(name = "`venuename`", nullable = false, length = 40)
    public String getVenuename() {
        return this.venuename;
    }

    public void setVenuename(String venuename) {
        this.venuename = venuename;
    }

    @Column(name = "`eventtype`", nullable = false, length = 20)
    public String getEventtype() {
        return this.eventtype;
    }

    public void setEventtype(String eventtype) {
        this.eventtype = eventtype;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "`venuename`", referencedColumnName = "`venuename`", insertable = false, updatable = false, foreignKey = @ForeignKey(name = "`FK_venues_TO_events_venuv31jN`"))
    @Fetch(FetchMode.JOIN)
    public Venues getVenues() {
        return this.venues;
    }

    public void setVenues(Venues venues) {
        if(venues != null) {
            this.venuename = venues.getVenuename();
        }

        this.venues = venues;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof Events)) return false;
        final Events events = (Events) o;
        return Objects.equals(getEventname(), events.getEventname());
    }

    @Override
    public int hashCode() {
        return Objects.hash(getEventname());
    }
}